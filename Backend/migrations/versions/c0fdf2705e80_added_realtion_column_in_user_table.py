"""added realtion column in user table

Revision ID: c0fdf2705e80
Revises: 
Create Date: 2025-06-29 21:49:28.521635

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'c0fdf2705e80'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.String(length=50), nullable=False),
    sa.Column('last_name', sa.String(length=50), nullable=False),
    sa.Column('username', sa.String(length=50), nullable=False),
    sa.Column('role', sa.String(length=20), nullable=False),
    sa.Column('profile_picture', sa.String(length=200), nullable=True),
    sa.Column('password_hash', sa.String(length=128), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('relation', sa.String(length=50), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('username')
    )
    op.create_table('caregiver_senior_map',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('caregiver_id', sa.Integer(), nullable=False),
    sa.Column('senior_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.ForeignKeyConstraint(['caregiver_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['senior_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('daily_health_entry',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.Column('bp_systolic', sa.Float(), nullable=True),
    sa.Column('bp_diastolic', sa.Float(), nullable=True),
    sa.Column('sugar_level', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('medicine',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('image', sa.String(length=200), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('is_approved', sa.Boolean(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_med_map',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('medicine_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('dosage', sa.Integer(), nullable=False),
    sa.Column('start_date', sa.Date(), nullable=False),
    sa.Column('end_date', sa.Date(), nullable=False),
    sa.Column('breakfast_before', sa.Boolean(), nullable=True),
    sa.Column('breakfast_after', sa.Boolean(), nullable=True),
    sa.Column('lunch_before', sa.Boolean(), nullable=True),
    sa.Column('lunch_after', sa.Boolean(), nullable=True),
    sa.Column('dinner_before', sa.Boolean(), nullable=True),
    sa.Column('dinner_after', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['medicine_id'], ['medicine.id'], name='fk_user_med_map_medicine_id', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='fk_user_med_map_user_id'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('medicine_reminder',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_med_map_id', sa.Integer(), nullable=False),
    sa.Column('reminder_time', sa.String(length=20), nullable=False),
    sa.Column('notification_type', sa.String(length=20), nullable=False),
    sa.Column('message', sa.String(length=200), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['user_med_map_id'], ['user_med_map.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('status',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_med_map_id', sa.Integer(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.Column('breakfast_before', sa.Boolean(), nullable=True),
    sa.Column('breakfast_after', sa.Boolean(), nullable=True),
    sa.Column('lunch_before', sa.Boolean(), nullable=True),
    sa.Column('lunch_after', sa.Boolean(), nullable=True),
    sa.Column('dinner_before', sa.Boolean(), nullable=True),
    sa.Column('dinner_after', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['user_med_map_id'], ['user_med_map.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('status')
    op.drop_table('medicine_reminder')
    op.drop_table('user_med_map')
    op.drop_table('medicine')
    op.drop_table('daily_health_entry')
    op.drop_table('caregiver_senior_map')
    op.drop_table('users')
    # ### end Alembic commands ###
